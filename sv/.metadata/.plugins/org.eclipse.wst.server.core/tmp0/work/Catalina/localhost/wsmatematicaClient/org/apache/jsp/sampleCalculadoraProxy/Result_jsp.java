/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-11-25 11:16:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sampleCalculadoraProxy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<TITLE>Result</TITLE>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("<H1>Result</H1>\r\n");
      out.write("\r\n");
      com.calculos.CalculadoraProxy sampleCalculadoraProxyid = null;
      synchronized (session) {
        sampleCalculadoraProxyid = (com.calculos.CalculadoraProxy) _jspx_page_context.getAttribute("sampleCalculadoraProxyid", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (sampleCalculadoraProxyid == null){
          sampleCalculadoraProxyid = new com.calculos.CalculadoraProxy();
          _jspx_page_context.setAttribute("sampleCalculadoraProxyid", sampleCalculadoraProxyid, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');

if (request.getParameter("endpoint") != null && request.getParameter("endpoint").length() > 0)
sampleCalculadoraProxyid.setEndpoint(request.getParameter("endpoint"));

      out.write("\r\n");
      out.write("\r\n");

String method = request.getParameter("method");
int methodID = 0;
if (method == null) methodID = -1;

if(methodID != -1) methodID = Integer.parseInt(method);
boolean gotMethod = false;

try {
switch (methodID){ 
	case 2:
	        gotMethod = true;
	        java.lang.String getEndpoint2mtemp = sampleCalculadoraProxyid.getEndpoint();
	if(getEndpoint2mtemp == null){
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(getEndpoint2mtemp );
      out.write('\r');
      out.write('\n');
      out.write('	');

	}else{
	        String tempResultreturnp3 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getEndpoint2mtemp));
	        
      out.write("\r\n");
      out.write("\t        ");
      out.print( tempResultreturnp3 );
      out.write("\r\n");
      out.write("\t        ");

	}
	break;
	case 5:
	        gotMethod = true;
	        String endpoint_0id=  request.getParameter("endpoint8");
	            java.lang.String endpoint_0idTemp = null;
	        if(!endpoint_0id.equals("")){
	         endpoint_0idTemp  = endpoint_0id;
	        }
	        sampleCalculadoraProxyid.setEndpoint(endpoint_0idTemp);
	break;
	case 10:
	        gotMethod = true;
	        com.calculos.Calculadora getCalculadora10mtemp = sampleCalculadoraProxyid.getCalculadora();
	if(getCalculadora10mtemp == null){
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(getCalculadora10mtemp );
      out.write('\r');
      out.write('\n');
      out.write('	');

	}else{
	        if(getCalculadora10mtemp!= null){
	        String tempreturnp11 = getCalculadora10mtemp.toString();
	        
      out.write("\r\n");
      out.write("\t        ");
      out.print(tempreturnp11);
      out.write("\r\n");
      out.write("\t        ");

	        }}
	break;
	case 13:
	        gotMethod = true;
	        String operacao_1id=  request.getParameter("operacao16");
	            java.lang.String operacao_1idTemp = null;
	        if(!operacao_1id.equals("")){
	         operacao_1idTemp  = operacao_1id;
	        }
	        String valor1_2id=  request.getParameter("valor118");
	        float valor1_2idTemp  = Float.parseFloat(valor1_2id);
	        String valor2_3id=  request.getParameter("valor220");
	        float valor2_3idTemp  = Float.parseFloat(valor2_3id);
	        java.lang.String getResultado13mtemp = sampleCalculadoraProxyid.getResultado(operacao_1idTemp,valor1_2idTemp,valor2_3idTemp);
	if(getResultado13mtemp == null){
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(getResultado13mtemp );
      out.write('\r');
      out.write('\n');
      out.write('	');

	}else{
	        String tempResultreturnp14 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getResultado13mtemp));
	        
      out.write("\r\n");
      out.write("\t        ");
      out.print( tempResultreturnp14 );
      out.write("\r\n");
      out.write("\t        ");

	}
	break;
	}
	} catch (Exception e) { 

      out.write("\r\n");
      out.write("Exception: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.toString()) );
      out.write("\r\n");
      out.write("Message: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.getMessage()) );
      out.write('\r');
      out.write('\n');

return;
}
if(!gotMethod){

      out.write("\r\n");
      out.write("result: N/A\r\n");

}

      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
